name: Run Examples
on:
  push:
permissions:
  contents: read
  actions: read
jobs:
  test-examples:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        compiler: [gcc, clang, tcc]
    
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0  
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install compilers
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc clang tcc
    
    - name: Test example 01-basic-build
      working-directory: ./examples/01-basic-build
      run: |
        ${{ matrix.compiler }} mate.c -o mate
        ./mate
        if [ $? -ne 0 ]; then
          echo "Example 01-basic-build failed with ${{ matrix.compiler }}"
          exit 1
        fi
    
    - name: Test example 02-custom-config
      working-directory: ./examples/02-custom-config
      run: |
        ${{ matrix.compiler }} mate.c -o mate
        ./mate
        if [ $? -ne 0 ]; then
          echo "Example 02-custom-config failed with ${{ matrix.compiler }}"
          exit 1
        fi
    
    - name: Test example 03-generic-flags
      working-directory: ./examples/03-generic-flags
      run: |
        ${{ matrix.compiler }} mate.c -o mate
        ./mate
        if [ $? -ne 0 ]; then
          echo "Example 03-generic-flags failed with ${{ matrix.compiler }}"
          exit 1
        fi
    
    - name: Test example 04-raylib-build
      working-directory: ./examples/04-raylib-build
      run: |
        ${{ matrix.compiler }} mate.c -o mate
        ./mate
        if [ $? -ne 0 ]; then
          echo "Example 04-raylib-build failed with ${{ matrix.compiler }}"
          exit 1
        fi
        
    - name: Test example 05-samurai-source-code
      working-directory: ./examples/05-samurai-source-code
      run: |
        ${{ matrix.compiler }} mate.c -o mate
        ./mate
        if [ $? -ne 0 ]; then
          echo "Example 05-samurai-source-code failed with ${{ matrix.compiler }}"
          exit 1
        fi
